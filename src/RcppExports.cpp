// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// mbmdrCpp
Rcpp::List mbmdrCpp(size_t pred_type, Rcpp::IntegerMatrix& input_data, Rcpp::NumericVector& response, size_t order, double alpha, size_t max_results, size_t top_results, size_t num_threads, size_t verbose, Rcpp::List saved_mbmdr);
RcppExport SEXP MBMDRClassifieR_mbmdrCpp(SEXP pred_typeSEXP, SEXP input_dataSEXP, SEXP responseSEXP, SEXP orderSEXP, SEXP alphaSEXP, SEXP max_resultsSEXP, SEXP top_resultsSEXP, SEXP num_threadsSEXP, SEXP verboseSEXP, SEXP saved_mbmdrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< size_t >::type pred_type(pred_typeSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix& >::type input_data(input_dataSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type response(responseSEXP);
    Rcpp::traits::input_parameter< size_t >::type order(orderSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< size_t >::type max_results(max_resultsSEXP);
    Rcpp::traits::input_parameter< size_t >::type top_results(top_resultsSEXP);
    Rcpp::traits::input_parameter< size_t >::type num_threads(num_threadsSEXP);
    Rcpp::traits::input_parameter< size_t >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type saved_mbmdr(saved_mbmdrSEXP);
    rcpp_result_gen = Rcpp::wrap(mbmdrCpp(pred_type, input_data, response, order, alpha, max_results, top_results, num_threads, verbose, saved_mbmdr));
    return rcpp_result_gen;
END_RCPP
}
